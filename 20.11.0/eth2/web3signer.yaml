openapi: 3.0.3
info:
  title: 'Web3Signer ETH2 Api'
  description: 'Sign Eth2 Artifacts'
  version: '20.11.0'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: /
  - url: http://localhost:9000/

paths:
  /api/v1/eth2/sign/{identifier}:
    post:
      tags:
        - 'Signing'
      summary: 'Signs data for ETH2 BLS public key'
      description: 'Signs data for the ETH2 BLS public key specified as part of the URL and returns the signature'
      operationId: 'ETH2_SIGN'
      parameters:
        - name: 'identifier'
          in: 'path'
          required: true
          description: 'Key for which data to sign'
          schema:
            type: 'string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AggregationSlotSigning'
                - $ref: '#/components/schemas/AggregateAndProofSigning'
                - $ref: '#/components/schemas/AttestationSigning'
                - $ref: '#/components/schemas/BlockSigning'
                - $ref: '#/components/schemas/DepositSigning'
                - $ref: '#/components/schemas/RandaoRevealSigning'
                - $ref: '#/components/schemas/VoluntaryExitSigning'
              discriminator:
                propertyName: type
                mapping:
                  AGGREGATION_SLOT: '#/components/schemas/AggregationSlotSigning'
                  AGGREGATE_AND_PROOF: '#/components/schemas/AggregationAndProofSigning'
                  ATTESTATION: '#/components/schemas/AttestationSigning'
                  BLOCK: '#/components/schemas/BlockSigning'
                  DEPOSIT: '#/components/schemas/DepositSigning'
                  RANDAO_REVEAL: '#/components/schemas/RandaoRevealSigning'
                  VOLUNTARY_EXIT: '#/components/schemas/VoluntaryExitSigning'
      responses:
        '200':
          description: 'hex encoded string of signature'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningResponse'
            text/plain:
              schema:
                type: string
              example: '0xb3baa751d0a9132cfe93e4e3d5ff9075111100e3789dca219ade5a24d27e19d16b3353149da1833e9b691bb38634e8dc04469be7032132906c927d7e1a49b414730612877bc6b2810c8f202daf793d1ab0d6b5cb21d52f9e52e883859887a5d9'
        '412':
          description: 'Signing operation failed due to slashing protection rules'
        '404':
          description: 'Public Key not found'
        '400':
          description: 'Bad request format'
        '500':
          description: 'Internal Web3Signer server error'

  /api/v1/eth2/publicKeys:
    get:
      tags:
        - 'Public Key'
      summary: 'List of available ETH2 BLS Public Keys'
      description: 'Returns the ETH2 BLS public keys for the private keys that have been loaded into Web3Signer'
      operationId: 'ETH2_LIST'
      responses:
        '200':
          description: 'list of public keys'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: 'Bad request format'
        '500':
          description: 'Internal Web3Signer server error'

  /upcheck:
    get:
      tags:
        - 'Server Status'
      summary: 'Server Status'
      description: 'Web3Signer server status'
      operationId: 'UPCHECK'
      responses:
        '200':
          description: 'OK'
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
              example: 'OK'
        '500':
          description: 'Internal Web3Signer server error'

components:
  schemas:
    Signing:
      type: "object"
      properties:
        type:
          type: "string"
        fork_info:
          type: object
          properties:
            fork:
              $ref: '#/components/schemas/AttestationData'
            genesis_validators_root:
              type: "string"
        signingRoot:
          type: "string"
      required:
        - type
        - fork_info
    SigningResponse:
      type: "object"
      properties:
        signature:
          type: "string"
          description: "Hex encoded string of signature"
          example: '0xb3baa751d0a9132cfe93e4e3d5ff9075111100e3789dca219ade5a24d27e19d16b3353149da1833e9b691bb38634e8dc04469be7032132906c927d7e1a49b414730612877bc6b2810c8f202daf793d1ab0d6b5cb21d52f9e52e883859887a5d9'
    AggregationSlotSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: "object"
          properties:
            aggregation_slot:
              type: "object"
              properties:
                slot:
                  type: string
                  format: "uint64"
          required:
            - aggregation_slot
    AggregateAndProofSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            aggregate_and_proof:
              $ref: "#/components/schemas/AggregateAndProof"
          required:
            - aggregate_and_proof
    AttestationSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            attestation:
              $ref: "#/components/schemas/AttestationData"
            fork:
              $ref: '#/components/schemas/AttestationData'
          required:
            - attestation
    BlockSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            block:
              $ref: "#/components/schemas/BeaconBlock"
          required:
            - block
    DepositSigning:
      type: object
      properties:
        type:
          type: "string"
        deposit:
          type: object
          properties:
            pubkey:
              type: "string"
            withdrawal_credentials:
              type: "string"
            amount:
              type: "string"
            signingRoot:
              description: 'signing root for optional verification if field present'
              type: "string"
            genesis_fork_version:
              type: "string"
              description: Bytes4 hexadecimal
      required:
        - type
        - deposit
    RandaoRevealSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            randao_reveal:
              $ref: "#/components/schemas/RandaoReveal"
          required:
            - randao_reveal
    VoluntaryExitSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            voluntary_exit:
              $ref: "#/components/schemas/VoluntaryExit"
          required:
            - voluntary_exit
    RandaoReveal:
      type: "object"
      properties:
        epoch:
          type: string
          format: "uint64"
    AttestationData:
      type: "object"
      properties:
        slot:
          type: "string"
          format: "uint64"
        index:
          type: "string"
          format: "uint64"
        beacon_block_root:
          type: "string"
        source:
          $ref: "#/components/schemas/Checkpoint"
        target:
          $ref: "#/components/schemas/Checkpoint"
    Checkpoint:
      type: "object"
      properties:
        epoch:
          type: "string"
        root:
          type: "string"
    Fork:
      type: "object"
      properties:
        previous_version:
          pattern: "^0x[a-fA-F0-9]{8}$"
          type: "string"
        current_version:
          pattern: "^0x[a-fA-F0-9]{8}$"
          type: "string"
        epoch:
          type: "string"
    BeaconBlock:
      type: "object"
      properties:
        slot:
          type: "string"
          format: "uint64"
        proposer_index:
          type: "string"
          format: "uint64"
        parent_root:
          type: "string"
        state_root:
          type: "string"
        body:
          $ref: "#/components/schemas/BeaconBlockBody"
    BeaconBlockBody:
      type: "object"
      properties:
        randao_reveal:
          type: "string"
        eth1_data:
          "$ref": "#/components/schemas/Eth1Data"
        graffiti:
          type: "string"
          description: "Bytes32 hexadecimal"
        proposer_slashings:
          type: "array"
          items:
            $ref: "#/components/schemas/ProposerSlashing"
        attester_slashings:
          type: "array"
          items:
            $ref: "#/components/schemas/AttesterSlashing"
        attestations:
          type: "array"
          items:
            $ref: "#/components/schemas/Attestation"
        deposits:
          type: "array"
          items:
            $ref: "#/components/schemas/Deposit"
        voluntary_exits:
          type: "array"
          items:
            $ref: "#/components/schemas/SignedVoluntaryExit"
    Eth1Data:
      type: "object"
      properties:
        deposit_root:
          type: "string"
        deposit_count:
          type: "string"
          format: "uint64"
        block_hash:
          type: "string"
    ProposerSlashing:
      type: "object"
      properties:
        header_1:
          "$ref": "#/components/schemas/SignedBeaconBlockHeader"
        header_2":
          "$ref": "#/components/schemas/SignedBeaconBlockHeader"
    AttesterSlashing:
      type: "object"
      properties:
        attestation_1:
          "$ref": "#/components/schemas/IndexedAttestation"
        attestation_2:
          "$ref": "#/components/schemas/IndexedAttestation"
    Attestation:
      type: "object"
      properties:
        aggregation_bits:
          type: "string"
        data:
          $ref: "#/components/schemas/AttestationData"
        signature:
          type: "string"
    Deposit:
      type: "object"
      properties:
        proof:
          type: "array"
          items:
            type: "string"
        data:
          $ref: "#/components/schemas/DepositData"
    SignedVoluntaryExit:
      type: "object"
      properties:
        message:
          $ref: "#/components/schemas/VoluntaryExit"
        signature:
          type: "string"
    SignedBeaconBlockHeader:
      type: "object"
      properties:
        message:
          $ref: "#/components/schemas/BeaconBlockHeader"
        signature:
          type: "string"
    IndexedAttestation:
      type: object
      properties:
        attesting_indices:
          type: array
          items:
            type: string
            format: uint64
        data:
          "$ref": "#/components/schemas/AttestationData"
        signature:
          type: string
    DepositData:
      type: "object"
      properties:
        pubkey:
          type: "string"
        withdrawal_credentials:
          type: "string"
        amount:
          type: "string"
        signature:
          type: "string"
    VoluntaryExit:
      type: object
      properties:
        epoch:
          type: string
          format: uint64
        validator_index:
          type: string
          format: uint64
    BeaconBlockHeader:
      type: object
      properties:
        slot:
          type: string
          format: uint64
        proposer_index:
          type: string
          format: uint64
        parent_root:
          type: string
          description: Bytes32 hexadecimal
        state_root:
          type: string
          description: Bytes32 hexadecimal
        body_root:
          type: string
          description: Bytes32 hexadecimal
    AggregateAndProof:
      type: object
      properties:
        aggregator_index:
          type: string
          format: uint64
        aggregate:
          "$ref": "#/components/schemas/Attestation"
        selection_proof:
          type: string
          description: Bytes96 hexadecimal

externalDocs:
  description: 'Web3Signer User Documentation'
  url: 'https://doc.web3signer.pegasys.tech/'
